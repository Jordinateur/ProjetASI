package client;

import hs.ejb.GardienManagerRemote;
import hs.ejb.MatchHockeyManagerRemote;
import hs.entity.Equipe;
import hs.entity.Gardien;
import hs.entity.MatchHockey;

import java.awt.CardLayout;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.security.Security;
import java.util.Iterator;
import java.util.List;
import java.util.Properties;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.swing.JApplet;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import org.jboss.sasl.JBossSaslProvider;

import utilities.EquipeUtility;
import utilities.MatchUtility;

public class HockeyApplet extends JApplet {
	private JTextField passField;
	private JTextField loginField;
	private JPanel panel_wrapper;
	private JList<Equipe> listEquipe;
	static {
		Security.addProvider(new JBossSaslProvider());
	}

	/**
	 * Create the applet.
	 */
	public HockeyApplet() {
		getContentPane().setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));

		panel_wrapper = new JPanel();
		getContentPane().add(panel_wrapper);
		panel_wrapper.setLayout(new CardLayout(0, 0));

		JPanel panel = new JPanel();
		panel_wrapper.add(panel, "name_174382275343371");

		JLabel lblNewLabel = new JLabel("Login");
		panel.add(lblNewLabel);

		loginField = new JTextField();
		panel.add(loginField);
		loginField.setColumns(10);

		JLabel lblPassword = new JLabel("Password");
		panel.add(lblPassword);

		passField = new JTextField();
		panel.add(passField);
		passField.setColumns(10);

		JButton btnSeConnecter = new JButton("se connecter");
		btnSeConnecter.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (loginField.getText().equals("user")
						&& passField.getText().equals("pass")) {
					CardLayout cl = (CardLayout) panel_wrapper.getLayout();
					cl.next(panel_wrapper);
				}
			}
		});
		panel.add(btnSeConnecter);

		JPanel panel_1 = new JPanel();
		panel_wrapper.add(panel_1, "name_174382287812009");

		JButton btnSelectionner = new JButton("Selectionner");
		panel_1.add(btnSelectionner);
		JList<MatchHockey> listMatch = new JList<MatchHockey>(MatchUtility.getAll());
		listMatch.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		panel_1.add(listMatch);

		listEquipe = new JList<Equipe>(EquipeUtility.getAll());
		listMatch.addListSelectionListener(new ListSelectionListener() {

			@Override
			public void valueChanged(ListSelectionEvent e) {
				JList<MatchHockey> lsm = (JList<MatchHockey>) e.getSource();
				if (lsm.isSelectionEmpty())
					return;
				listEquipe.removeAll();
				listEquipe = null;
				int minIndex = lsm.getMinSelectionIndex();
				int maxIndex = lsm.getMaxSelectionIndex();
				for (int i = minIndex; i <= maxIndex; i++) {
					if (lsm.isSelectedIndex(i)) {
						MatchHockey selectedMatch = MatchUtility.getAll()[i];
						Equipe[] equipes = new Equipe[2];
						equipes[0] = MatchUtility.getEquipeAFrom(selectedMatch);
						equipes[1] = MatchUtility.getEquipeBFrom(selectedMatch);
						listEquipe = new JList<Equipe>(equipes);
						listEquipe.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
					}
				}
			}
		});
		listEquipe.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		panel_1.add(listEquipe);

		

	}

}
